name: version update

on:
  pull_request:
    types: [ closed ]
    branches: [ master ]

jobs:
  apk-version-update:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: build app version check
        id: appVersion
        uses: Devofure/version-reader-action@v1.0.0

      - name: get commit message
        run: |
          echo COMMIT_MESSAGE_TITLE=$(git log -1 --oneline --pretty=format:%s) >> $GITHUB_ENV
          echo COMMIT_MESSAGE_BODY=$(git log -1 --oneline --pretty=format:%b) >> $GITHUB_ENV

      - name: view commit message
        run: |
          tr -d '\n\r' < ${{ env.COMMIT_MESSAGE_BODY }}
          echo ${{ env.COMMIT_MESSAGE_TITLE }}
          echo ${{ env.COMMIT_MESSAGE_BODY }} | tr -d '\r'
          echo ${ env.COMMIT_MESSAGE_BODY //'-'/'\n'}

      - name: Register app version environment variable and update major version
        if: contains(env.COMMIT_MESSAGE_TITLE, 'major')
        env:
          VERSION_CODE: ${{ steps.appVersion.outputs.versionCode }}
          MAJOR_VERSION: ${{ steps.appVersion.outputs.majorVersion }}
          MINOR_VERSION: ${{ steps.appVersion.outputs.minorVersion }}
          PATCH_VERSION: ${{ steps.appVersion.outputs.patchVersion }}
        run: |
          echo NEW_VERSION_CODE=$(($VERSION_CODE+1)) >> $GITHUB_ENV
          echo NEW_VERSION_NAME=$(($MAJOR_VERSION + 1)).0.0 >> $GITHUB_ENV

      - name: Register app version environment variable and update minor version
        if: contains(env.COMMIT_MESSAGE_TITLE, 'minor')
        env:
          VERSION_CODE: ${{ steps.appVersion.outputs.versionCode }}
          MAJOR_VERSION: ${{ steps.appVersion.outputs.majorVersion }}
          MINOR_VERSION: ${{ steps.appVersion.outputs.minorVersion }}
          PATCH_VERSION: ${{ steps.appVersion.outputs.patchVersion }}
        run: |
          echo NEW_VERSION_CODE=$(($VERSION_CODE+1)) >> $GITHUB_ENV
          echo NEW_VERSION_NAME=$MAJOR_VERSION.$(($MINOR_VERSION + 1)).0 >> $GITHUB_ENV

      - name: Register app version environment variable and update patch version
        if: >-
          ${{ !contains(env.COMMIT_MESSAGE_TITLE, 'major') &&
          !contains(env.COMMIT_MESSAGE_TITLE, 'minor')}}
        env:
          VERSION_CODE: ${{ steps.appVersion.outputs.versionCode }}
          MAJOR_VERSION: ${{ steps.appVersion.outputs.majorVersion }}
          MINOR_VERSION: ${{ steps.appVersion.outputs.minorVersion }}
          PATCH_VERSION: ${{ steps.appVersion.outputs.patchVersion }}
        run: |
          echo NEW_VERSION_CODE=$(($VERSION_CODE+1)) >> $GITHUB_ENV
          echo NEW_VERSION_NAME=$MAJOR_VERSION.$MINOR_VERSION.$(($PATCH_VERSION + 1)) >> $GITHUB_ENV

#      - name: update gradle version for android
#        uses: damienaicheh/update-android-version-gradle-action@v1.0.0
#        with:
#          build-gradle-path: 'app/build.gradle'
#          version-code: ${{ env.NEW_VERSION_CODE }}
#          version-name: '${{ env.NEW_VERSION_NAME }}'
#          print-file: true
#
#      - name: git commit and push
#        uses: GuillaumeFalourd/git-commit-push@v1.3
#        with:
#          email: ${{ github.actor }}@users.noreply.github.com
#          name: ${{ github.actor }}
#          access_token: ${{ secrets.ACCESS_TOKEN }}
#          commit_message: V${{ env.NEW_VERSION_NAME }} ci skip
#
#      - name: Build APK
#        run: ./gradlew assembledebug --stacktrace
#
#      - name: apk name change
#        run: |
#          cd app/build/outputs/apk/debug/
#          mv app-debug.apk ${{ env.NEW_VERSION_NAME }}.apk
#          ls
#
#      - name: APK File Upload Artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ env.NEW_VERSION_NAME }}
#          path: app/build/outputs/apk/debug/*.apk
#        if: success()

      - name: slack send massage
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "${{ env.COMMIT_MESSAGE_TITLE }} \n ${{ env.COMMIT_MESSAGE_BODY }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK