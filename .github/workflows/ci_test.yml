name: factory_stockapp CI

on:
  push:
    branches: [ master,lint ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    if: >-
      ${{ !contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build APK
        run: ./gradlew assembledebug --stacktrace

      - name: Build Complete
        run: echo "Build complete"
  code-check:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: lint Code
        run: ./gradlew lint

      - name: lint file upload
        uses: actions/upload-artifact@v3
        with:
          name: lint-artifact
          path: app/build/reports/*.html
        if: success()
      - name: Code Style Check
        run: ./gradlew checkstyle

      - name: checkstyle file upload
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle-artifact
          path: app/build/reports/checkstyle/*.html

  apk-version-update:
    needs: code-check
    if: ${{ github.event.pull_request.merged
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[skip ci]')}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: build app version check
        if: ${{ github.event_name == 'push' && github.ref_name == 'dev' && success()}}
        id: appVersion
        uses: Devofure/version-reader-action@v1.0.0

      - name: Register app version environment variable
        if: success()
        env:
          VERSION_CODE: ${{ steps.appVersion.outputs.versionCode }}
          MAJOR_VERSION: ${{ steps.appVersion.outputs.majorVersion }}
          MINOR_VERSION: ${{ steps.appVersion.outputs.minorVersion }}
          PATCH_VERSION: ${{ steps.appVersion.outputs.patchVersion }}
        run: |
          echo NEW_VERSION_CODE=$(($VERSION_CODE+1)) >> $GITHUB_ENV
          echo NEW_VERSION_NAME=$MAJOR_VERSION.$MINOR_VERSION.$(($PATCH_VERSION + 1)) >> $GITHUB_ENV

      - name: update gradle version for android
        uses: damienaicheh/update-android-version-gradle-action@v1.0.0
        with:
          build-gradle-path: 'app/build.gradle'
          version-code: ${{ env.NEW_VERSION_CODE }}
          version-name: '${{ env.NEW_VERSION_NAME }}'
          print-file: true

      - name: git commit
        run: git commit -m "version update V${{env.NEW_VERSION_NAME}} ci skip"

      - name: git push
        run: git push origin master



